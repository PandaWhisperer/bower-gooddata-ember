/* Copyright (C) 2007-2013, GoodData(R) Corporation. All rights reserved. */
/* gooddata-ember - v0.0.2 */
/* 2014-05-16 13:51:20 */
/* Latest git commit: "f1c35ad" */

!function(window,a){"function"==typeof define&&define.amd?define(a):"object"==typeof exports?module.exports=a():window.gooddata=a()}(this,function(){return define("metadata",["gooddata","ember"],function(a,b){return Metadata=b.Object.extend({type:b.required(),uri:b.computed.any("meta.uri","meta.link","links.self"),author:function(){var a=this;return this.getAuthor().then(function(b){return a.set("author",b),b})}.property("meta.author"),usedBy:function(){var a=this;return this.getUsedBy().then(function(b){return b.isUsed=0===b.nodes.length?!1:!0,a.set("usedBy",b),b})}.property("uri"),"delete":function(){var b=this.get("uri");return a.xhr.ajax(b,{type:"DELETE"})},reload:function(){var c=this.get("uri"),d=this.get("type"),e=this;return new b.RSVP.Promise(function(b,f){if(!c)throw"Error: could not determine object uri";a.xhr.get(c).then(function(a){a&&a[d]&&b(e.setProperties(a[d]))},function(a){f(a)})})},getAuthor:function(){var a=this.get("meta.author");return App.User.load(a).then(function(a){return a.fullName=a.get("firstName")+" "+a.get("lastName"),a})},getUsedBy:function(){var c=this.get("uri");return new b.RSVP.Promise(function(d,e){if(!c)throw"Error: could not determine object uri";a.xhr.get(c.replace("/obj/","/usedby/")).then(function(a){a&&a.usedby&&d(b.Object.create(a.usedby))},function(a){e(a)})})}}),Metadata.reopenClass({load:function(c){var d=this;return this.type||(this.type=this.create().get("type")),new b.RSVP.Promise(function(b,e){if(!d.type)throw"Error: could not determine type";a.xhr.get(c).then(function(a){a&&a[d.type]&&b(d.create(a[d.type]))},function(a){e(a)})})}}),Metadata}),define("user",["gooddata","ember"],function(a,b){return User=App.Metadata.extend({type:"accountSetting",projects:function(){var a=this;return this.getProjects().then(function(b){return a.set("projects",b),b})}.property("links.projects"),getProjects:function(){var c=this.get("links.projects");return new b.RSVP.Promise(function(b,d){if(!c)throw"Error: could not find projects link";a.xhr.get(c).then(function(a){if(a&&a.projects){var c=a.projects.map(function(a){return App.Project.create(a.project)});b(c)}},function(a){d(a)})})}}),User.reopenClass({currentUser:function(){return this.load("/gdc/account/profile/current")}}),User}),define("project",["gooddata","ember"],function(a,b){return Project=App.Metadata.extend({type:"project",id:function(){var a=this.get("uri");if(a){var b=a.split("/");return b[b.length-1]}}.property("uri"),metrics:function(){var a=this;return this.getMetrics().then(function(b){return a.set("metrics",b),b})}.property(),getMetrics:function(){var c=this.get("links.metadata");return new b.RSVP.Promise(function(b,d){if(!c)throw"Error: could not find metadata link";a.xhr.get(c+"/query/metrics").then(function(a){if(a&&a.query&&a.query.entries){var c=a.query.entries.map(function(a){return App.Metric.create({meta:a})});b(c)}},function(a){d(a)})})}}),Project.reopenClass({load:function(a){var b=a;return b&&-1==b.indexOf("/")&&(b="/gdc/projects/"+b),this._super(b)}}),Project}),define("metric",["gooddata","ember"],function(){return Metric=App.Metadata.extend({type:"metric",dashboards:function(){var a=this.get("usedBy.nodes");return a?a.filterBy("category","projectDashboard"):void 0}.property("usedBy")})}),define("gooddata-ember",["metadata","user","project","metric"],function(a,b,c,d){return{Metadata:a,User:b,Project:c,Metric:d}}),require("gooddata-ember")});